A. Sequential Reads (readseq)
LevelDB 299133 ops/sec 	3.3430 micros/op
Kyoto TreeDB 16514 ops/sec 	60.5547 micros/op
SQLite3 7402 ops/sec 	135.0986 micros/op
MDB 30303030 ops/sec 	0.0330 micros/op
BerkeleyDB 9133 ops/sec 	109.4930 micros/op
 
B. Random Reads (readrandom)
LevelDB 15183 ops/sec 	65.8631 micros/op
Kyoto TreeDB 14518 ops/sec 	68.8800 micros/op
SQLite3 7047 ops/sec 	141.9044 micros/op
MDB 1718213 ops/sec 	0.5820 micros/op
BerkeleyDB 8646 ops/sec 	115.6604 micros/op
 

MDB's single-level-store architecture clearly outclasses all of the other designs; the others barely even register on the results. MDB's zero-memcpy reads mean its read rate is essentially independent of the size of the data items being fetched; it is only affected by the total number of keys in the database.

C. Sequential Writes (fillseq)
LevelDB 3366 ops/sec 	297.0885 micros/op
Kyoto TreeDB 5860 ops/sec 	170.6485 micros/op
SQLite3 2029 ops/sec 	492.8536 micros/op
MDB 12905 ops/sec 	77.4893 micros/op
BerkeleyDB 1920 ops/sec 	520.8333 micros/op
 
D. Random Writes (fillrandom)
LevelDB 742 ops/sec 	1347.7089 micros/op
Kyoto TreeDB 5709 ops/sec 	175.1620 micros/op
SQLite3 2004 ops/sec 	499.0020 micros/op
MDB 12735 ops/sec 	78.5238 micros/op
BerkeleyDB 1902 ops/sec 	525.7624 micros/op
 
E. Batch Writes
Sequential Writes (fillseqbatch)
LevelDB 3138 entries/sec 	318.6743 micros/op
Kyoto TreeDB 5860 entries/sec 	170.6485 micros/op
SQLite3 2068 entries/sec 	483.5590 micros/op
MDB 13215 entries/sec 	75.6716 micros/op
BerkeleyDB 1952 entries/sec 	512.2951 micros/op
 
Random Writes (fillrandbatch)
LevelDB 3079 entries/sec 	324.7808 micros/op
Kyoto TreeDB 5709 entries/sec 	175.1620 micros/op
SQLite3 2041 entries/sec 	489.9559 micros/op
MDB 13099 entries/sec 	76.3417 micros/op
BerkeleyDB 1939 entries/sec 	515.7298 micros/op
 

Unlike the other databases MDB handles large value writes with ease.

In Google's original test only 1000 entries are used but that is too few to characterize each database. With 10000 entries we see that LevelDB's performance drops off a cliff in the random write tests. This is one of the most common problems with microbenchmarks - very often the data sets are too small to yield any meaningful results.

F. Synchronous Writes
Sequential Writes (fillseqsync)
LevelDB 3368 ops/sec 	296.9121 micros/op
Kyoto TreeDB 3121 ops/sec 	320.4101 micros/op
SQLite3 2026 ops/sec 	493.5834 micros/op
MDB 12916 ops/sec 	77.4234 micros/op
BerkeleyDB 1913 ops/sec 	522.7392 micros/op
 
Random Writes (fillrandsync)
LevelDB 745 ops/sec 	1342.2819 micros/op
Kyoto TreeDB 2162 ops/sec 	462.5347 micros/op
SQLite3 1996 ops/sec 	501.0020 micros/op
MDB 12665 ops/sec 	78.9578 micros/op
BerkeleyDB 1893 ops/sec 	528.2620 micros/op
